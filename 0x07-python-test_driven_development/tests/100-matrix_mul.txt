The ``100-matrix_mul`` module
=============================

Using ``matrix_mul``
--------------------

Importing the function from the module:
    >>> matrix_mul = __import__("100-matrix_mul").matrix_mul

Checking for module docstring:
    >>> m = __import__("100-matrix_mul").__doc__
    >>> len(m) > 1
    True

Checking for function docstring:
    >>> f = __import__("100-matrix_mul").matrix_mul.__doc__
    >>> len(f) > 1
    True

Multiplying two 2x2 matrices:
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

Multiplying a 1x2 matrix with a 2x2 matrix:
    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

Testing with incompatible dimensions:
    >>> matrix_mul([[1, 2, 3]], [[4, 5], [6, 7]])
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied

Testing with empty matrices:
    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty
    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

Testing with non-list inputs:
    >>> matrix_mul("not a list", [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list
    >>> matrix_mul([[1, 2], [3, 4]], "not a list")
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list

Testing with non-list of lists inputs:
    >>> matrix_mul([1, 2], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists
    >>> matrix_mul([[1, 2], [3, 4]], [5, 6])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists

Testing with non-numeric elements:
    >>> matrix_mul([[1, 2], ["3", 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "4"]])
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats

Testing with rows of different sizes:
    >>> matrix_mul([[1, 2, 3], [4, 5]], [[1, 2], [3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size
    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size
